#> # A tibble: 3 x 2
#>   g         x
#>  <chr>  <int>
#> 1 A         1
#> 2 B         2
#> 3 C         3
# 将在列表中的向量转换成 tibble
as_data_frame(lst)
# 从两个简单的向量开始
g <- c("A", "B", "C")
x <- 1:3
dat <- data.frame(g, x)
dat
#>   g x
#> 1 A 1
#> 2 B 2
#> 3 C 3
lst <- list(group = g, value = x) # 由向量组成的列表
dat <- as.data.frame(lst)
library(dplyr)
data_frame(g, x)
#> # A tibble: 3 x 2
#>   g         x
#>  <chr>  <int>
#> 1 A         1
#> 2 B         2
#> 3 C         3
# 将在列表中的向量转换成 tibble
as_data_frame(lst)
as_tibble(dat)
#> # A tibble: 3 x 2
#>  group value
#>  <fct> <int>
#> 1 A        1
#> 2 B        2
#> 3 C        3
str(ToothGrowth)
#> 'data.frame':    60 obs. of  3 variables:
#>  $ len : num  4.2 11.5 7.3 5.8 6.4 10 11.2 11.2 5.2 7 ...
#>  $ supp: Factor w/ 2 levels "OJ","VC": 2 2 2 2 2 2 2 2 2 2 ...
#>  $ dose: num  0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 ...
summary(ToothGrowth)
#>       len        supp         dose
#>  Min.   : 4.20   OJ:30   Min.   :0.500
#>  1st Qu.:13.07   VC:30   1st Qu.:0.500
#>  Median :19.25           Median :1.000
#>  Mean   :18.81           Mean   :1.167
#>  3rd Qu.:25.27           3rd Qu.:2.000
#>  Max.   :33.90           Max.   :2.000
tg <- ToothGrowth
tg$supp <- as.character(tg$supp)
str(tg)
#> 'data.frame': 60 obs. of 3 variables:
#> $ len : num 4.2 11.5 7.3 5.8 6.4 10 11.2 11.2 5.2 7 ...
#> $ supp: chr "VC" "VC" "VC" "VC" ...
#> $ dose: num 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 ...
# 直接输出列
# 原始数据框 (因子)
ToothGrowth$supp
#> [1] VC VC VC VC VC VC VC VC VC VC VC VC VC VC VC VC VC VC VC VC VC VC VC VC
#> [25] VC VC VC VC VC VC OJ OJ OJ OJ OJ OJ OJ OJ OJ OJ OJ OJ OJ OJ OJ OJ OJ OJ
#> [49] OJ OJ OJ OJ OJ OJ OJ OJ OJ OJ OJ OJ
#> Levels: OJ VC
# 新数据框 (字符串)
tg$supp
tg$supp
#> [1] "VC" "VC" "VC" "VC" "VC" "VC" "VC" "VC" "VC" "VC" "VC" "VC" "VC" "VC"
#> [15] "VC" "VC" "VC" "VC" "VC" "VC" "VC" "VC" "VC" "VC" "VC" "VC" "VC" "VC"
#> [29] "VC" "VC" "OJ" "OJ" "OJ" "OJ" "OJ" "OJ" "OJ" "OJ" "OJ" "OJ" "OJ" "OJ"
#> [43] "OJ" "OJ" "OJ" "OJ" "OJ" "OJ" "OJ" "OJ" "OJ" "OJ" "OJ" "OJ" "OJ" "OJ"
#> [57] "OJ" "OJ" "OJ" "OJ"
library(dplyr)
ToothGrowth %>%
mutate(newcol = NA)
vec <- rep(c(1, 2), 30)
ToothGrowth %>%
mutate(newcol = vec)
# 为了本例使用而复制一个 ToothGrowth
ToothGrowth2 <- ToothGrowth
# 给一整列赋值 NA
ToothGrowth2$newcol <- NA
# 赋值 1 和 2，自动重复赋值来填充此列
ToothGrowth2$newcol <- c(1, 2)
# 移除 len 列
ToothGrowth %>%
select(-len)
# 从 ToothGrowth 中删除 len 和 supp 列
ToothGrowth %>%
select(-len, -supp)
# 只保留 dose 列
ToothGrowth %>%
select(dose)
ToothGrowth$len <- NULL
tg_mod <- ToothGrowth %>%
rename(length = len)
ToothGrowth %>%
rename(length = len,
supplement_type = supp
)
tg_mod <- ToothGrowth2 %>%
rename(length = len)
# 复制 ToothGrowth 数据
ToothGrowth2 <- ToothGrowth
names(ToothGrowth2)  # 输出列名
#> [1] "len" "supp" "dose"
names(ToothGrowth2)[names(ToothGrowth2) == "len"] <- "length"
names(ToothGrowth)
#> [1] "len" "supp" "dose"
ToothGrowth %>%
select(dose, len, supp)
library(gcookbook) # 加载 gcookbook 是为了使用 climate 数据集
climate
#>      Source Year Anomaly1y Anomaly5y Anomaly10y Unc10y
#> 1  Berkeley 1800        NA        NA     -0.435  0.505
#> 2  Berkeley 1801        NA        NA     -0.453  0.493
#>  ...<495 more rows>...
#> 498 CRUTEM3 2010    0.8023        NA         NA     NA
#> 499 CRUTEM3 2011    0.6193        NA         NA     NA
climate %>%
filter(Source == "Berkeley" & Year >= 1900 & Year <= 2000)
climate %>%
select(Year, Anomaly10y)
#>     Year Anomaly10y
#> 1   1800     -0.435
#> 2   1801     -0.453
#>  ...<495 more rows>...
#> 498 2010         NA
#> 499 2011         NA
climate %>%
filter(Source == "Berkeley" & Year >= 1900 & Year <= 2000) %>%
select(Year, Anomaly10y)
#>     Year Anomaly10y
#> 1   1900     -0.171
#> 2   1901     -0.162
#>  ...<97 more rows>...
#> 100 1999      0.734
#> 101 2000      0.748
slice(climate, 1:100)
climate[climate$Source == "Berkeley" &
climate$Year >= 1900 &
climate$Year <= 2000, ]
#>       Source Year Anomaly1y Anomaly5y Anomaly10y Unc10y
#> 101 Berkeley 1900        NA        NA     -0.171  0.108
#> 102 Berkeley 1901        NA        NA     -0.162  0.109
#>  ...<97 more rows>...
#> 200 Berkeley 1999        NA        NA      0.734  0.025
#> 201 Berkeley 2000        NA        NA      0.748  0.026
climate[climate$Source == "Berkeley" &
climate$Year >= 1900 &
climate$Year <= 2000,
c("Year", "Anomaly10y")]
#>     Year Anomaly10y
#> 101 1900     -0.171
#> 102 1901     -0.162
#>  ...<97 more rows>...
#> 200 1999      0.734
#> 201 2000      0.748
# 默认的因子水平的顺序是按字母排的
sizes <- factor(c("small", "large", "large", "small", "medium"))
sizes
#> [1] small large large small medium
#> Levels: large medium small
# 改变因子水平的顺序
factor(sizes, levels = c("small", "medium", "large"))
#> [1] small large large small medium
#> Levels: small medium large
# 复制一份 InsectSprays 数据，因为我们要修改它
iss <- InsectSprays
iss$spray
#> [1] A A A A A A A A A A A A B B B B B B B B B B B B C C C C C C C C C C C C
#> [37] D D D D D D D D D D D D E E E E E E E E E E E E F F F F F F F F F F F F
#> Levels: A B C D E F
iss$spray <- reorder(iss$spray, iss$count, FUN=mean)
iss$spray
#> [1] A A A A A A A A A A A A B B B B B B B B B B B B C C C C C C C C C C C C
#> [37] D D D D D D D D D D D D E E E E E E E E E E E E F F F F F F F F F F F F
#> attr(,"scores")
#>         A         B        C        D        E         F
#> 14.500000 15.333333 2.083333 4.916667 3.500000 16.666667
#> Levels: C E D A B F
reorder(iss$spray, iss$count, FUN = mean)
fct_reorder(iss$spray, iss$count, .fun = mean)
install.packages("forcats")
library(forcats)
reorder(iss$spray, iss$count, FUN = mean)
fct_reorder(iss$spray, iss$count, .fun = mean)
sizes <- factor(c( "small", "large", "large", "small", "medium"))
sizes
#> [1] small large large small medium
#> Levels: large medium small
# 通过一个命名向量传入映射关系（旧水平跟新水平的映射）
fct_recode(sizes, S = "small", M = "medium", L = "large")
#> [1] S L L S M
#> Levels: L M S
old <- c("small", "medium", "large")
new <- c("S", "M", "L")
# 创建一个表示新旧映射关系的命名变量
mappings <- setNames(old, new)
mappings
#>  S   M   L
#> "small" "medium" "large"
# 创建传给 fct_recode() 的参数列表
args <- c(list(sizes), mappings)
# 观察这个列表的结构
str(args)
#> List of 4
#> $ : Factor w/ 3 levels "large","medium",..: 3 1 1 3 2
#> $ S: chr "small"
#> $ M: chr "medium"
#> $ L: chr "large"
# do.call 传入参数，调用 fct_recode
do.call(fct_recode, args)
#> [1] S L L S M
#> Levels: L M S
do.call(
fct_recode,
c(list(sizes), setNames(c("small", "medium", "large"), c("S", "M", "L")))
)
#> [1] S L L S M
#> Levels: L M S
sizes <- factor(c( "small", "large", "large", "small", "medium"))
# 逐个重命名因子水平水平
levels(sizes)[levels(sizes) == "large"] <- "L"
levels(sizes)[levels(sizes) == "medium"] <- "M"
levels(sizes)[levels(sizes) == "small"] <- "S"
sizes
#> [1] S L L S M
#> Levels: L M S
sizes <- factor(c("small", "large", "large", "small", "medium"))
levels(sizes) <- list(S = "small", M = "medium", L = "large")
sizes
#> [1] S L L S M
#> Levels: S M L
sizes <- factor(c("small", "large", "large", "small", "medium"))
sizes <- sizes[1:3]
sizes
#> [1] small large large
#> Levels: large medium small
droplevels(sizes)
#> [1] small large large
#> Levels: large small
do.call(
recode,
c(list(sizes), setNames(c("S", "M", "L"), c("small", "medium", "large")))
)
#> [1] "S" "L" "L" "S" "M"
sizes <- c("small", "large", "large", "small", "medium")
sizes[sizes == "small"] <- "S"
sizes[sizes == "medium"] <- "M" sizes[sizes == "large"] <- "L"
sizes <- c("small", "large", "large", "small", "medium")
sizes[sizes == "small"] <- "S"
sizes[sizes == "medium"] <- "M"
sizes[sizes == "large"] <- "L"
sizes
#> [1] "S" "L" "L" "S" "M"
# 在 PlantGrowth 的一个子数据集上操作
pg <- PlantGrowth[c(1,2,11,21,22), ]
pg
#>  weight group
#> 1  4.17  ctrl
#> 2  5.58  ctrl
#> 11 4.81  trt1
#> 21 6.31  trt2
#> 22 5.12  trt2
library(dplyr)
recode(pg$group, ctrl = "No", trt1 = "Yes", trt2 = "Yes")
#> [1] No No Yes Yes Yes
#> Levels: No Yes
pg$treatment <- recode(pg$group, ctrl = "No", trt1 = "Yes", trt2 = "Yes")
recode(as.character(pg$group), ctrl = "No", trt1 = "Yes", trt2 = "Yes")
#> [1] "No" "No" "Yes" "Yes" "Yes"
library(forcats)
fct_recode(pg$group, No = "ctrl", Yes = "trt1", Yes = "trt2")
#> [1] No No Yes Yes Yes
#> Levels: No Yes
oldvals <- c("ctrl", "trt1", "trt2")
newvals <- factor(c("No", "Yes", "Yes"))
newvals[ match(pg$group, oldvals) ]
#> [1] No No Yes Yes Yes
#> Levels: No Yes
pg$treatment[pg$group == "ctrl"] <- "No"
pg$treatment[pg$group == "trt1"] <- "Yes"
pg$treatment[pg$group == "trt2"] <- "Yes"
# Convert to a factor
pg$treatment <- factor(pg$treatment)
pg
#>  weight group treatment
#> 1  4.17  ctrl        No
#> 2  5.58  ctrl        No
#> 11 4.81  trt1       Yes
#> 21 6.31  trt2       Yes
#> 22 5.12  trt2       Yes
pg$newcol[pg$group == "ctrl" & pg$weight < 5] <- "no_small"
pg$newcol[pg$group == "ctrl" & pg$weight >= 5] <- "no_large"
pg$newcol[pg$group == "trt1"] <- "yes"
pg$newcol[pg$group == "trt2"] <- "yes"
pg$newcol <- factor(pg$newcol)
pg
#>   weight group  newcol
#> 1   4.17 ctrl no_small
#> 2   5.58 ctrl no_large
#> 11  4.81 trt1     yes
#> 21  6.31 trt2     yes
#> 22  5.12 trt2     yes
pg <- PlantGrowth
pg$wtclass <- cut(pg$weight, breaks = c(0, 5, 6, Inf))
pg
#>   weight group wtclass
#> 1  4.17   ctrl   (0,5]
#> 2  5.58   ctrl   (5,6]
#>  ...<26 more rows>...
#> 29 5.80   trt2   (5,6]
#> 30 5.26   trt2   (5,6]
pg$wtclass <- cut(pg$weight, breaks = c(0, 5, 6, Inf),
labels = c("small", "medium", "large"))
pg
#>  weight group wtclass
#> 1  4.17  ctrl   small
#> 2  5.58  ctrl  medium
#>  ...<26 more rows>...
#> 29 5.80  trt2  medium
#> 30 5.26  trt2  medium
cut(pg$weight, breaks = c(0, 5, 6, Inf), right = FALSE)
#> [1] [0,5)    [5,6)   [5,6)   [6,Inf) [0,5)   [0,5)   [5,6)   [0,5)   [5,6)
#> [10] [5,6)   [0,5)   [0,5)   [0,5)   [0,5)   [5,6)   [0,5)   [6,Inf) [0,5)
#> [19] [0,5)   [0,5)   [6,Inf) [5,6)   [5,6)   [5,6)   [5,6)   [5,6)   [0,5)
#> [28] [6,Inf) [5,6)   [5,6)
#> Levels: [0,5) [5,6) [6,Inf)
library(gcookbook) # 加载 gcookbook 是为了使用 heightweight 数据集
heightweight
#>     sex ageYear ageMonth heightIn weightLb
#>  1    f   11.92      143     56.3     85.0
#>  2    f   12.92      155     62.3    105.0
#>   ...<232 more rows>...
#>  236  m   13.92      167     62.0    107.5
#>  237  m   12.58      151     59.3     87.0
heightweight %>%
mutate(bmi = weightKg / (heightCm / 100)^2)
heightweight %>%
mutate(
heightCm = heightIn * 2.54,
weightKg = weightLb / 2.204
)
#>     sex ageYear ageMonth heightIn weightLb heightCm weightKg
#>  1    f   11.92      143     56.3     85.0  143.002 38.56624
#>  2    f   12.92      155     62.3    105.0  158.242 47.64065
#>  ...<232 more rows>...
#>  235  m   13.92      167     62.0    107.5  157.480 48.77495
#>  236  m   12.58      151     59.3     87.0  150.622 39.47368
heightweight %>%
mutate(bmi = weightKg / (heightCm / 100)^2)
library(MASS) # 加载 MASS 是为了使用 cabbages 数据集
library(dplyr)
library(dplyr)
cabbages %>%
group_by(Cult) %>%
mutate(DevWt = HeadWt - mean(HeadWt))
#> # A tibble: 60 x 5
#> # Groups:    Cult [2]
#>  Cult  Date HeadWt  VitC  DevWt
#>  <fct> <fct> <dbl> <int>  <dbl>
#> 1 c39    d16     2.5    51 -0.407
#> 2 c39    d16     2.2    55 -0.707
#> 3 c39    d16     3.1    45  0.193
#> 4 c39    d16     4.3    42  1.39
#> 5 c39    d16     2.5    53 -0.407
#> 6 c39    d16     4.3    50  1.39
#> #  ... with 54 more rows
cabbages %>%
group_by(Cult, Date) %>%
mutate(
DevWt = HeadWt - mean(HeadWt),
DevVitC = VitC - mean(VitC)
)
#> # A tibble: 60 x 6
#> # Groups:    Cult, Date [6]
#>   Cult Date HeadWt  VitC DevWt DevVitC
#>  <fct> <fct> <dbl> <int> <dbl>     <dbl>
#> 1 c39    d16     2.5    51 -0.68  0.7
#> 2 c39    d16     2.2    55 -0.98  4.7
#> 3 c39    d16     3.1    45 -0.08 -5.30
#> 4 c39    d16     4.3    42  1.12 -8.30
#> 5 c39    d16     2.5    53 -0.68  2.7
#> 6 c39    d16     4.3    50  1.12 -0.300
#> # ... with 54 more rows
c1 %>%
group_by(Cult) %>%
summarise(
Weight = mean(HeadWt, na.rm = TRUE),
sd = sd(HeadWt, na.rm = TRUE),
n = n()
)
c1 <- cabbages  # 复制数据
c1$HeadWt[c(1,20,45)] <- NA # 数据某些值赋值为 NA
c1 %>%
group_by(Cult) %>%
summarise(
Weight = mean(HeadWt),
sd = sd(HeadWt),
n = n()
)
#> # A tibble: 2 x 4
#>   Cult Weight     sd     n
#>  <fct> <dbl> <dbl> <int>
#> 1 c39    NA    NA     30
#> 2 c52    NA    NA     30
c1 %>%
group_by(Cult) %>%
summarise(
Weight = mean(HeadWt, na.rm = TRUE),
sd = sd(HeadWt, na.rm = TRUE),
n = n()
)
#> # A tibble: 2 x 4
#>   Cult  Weight    sd     n
#>   <fct>  <dbl> <dbl> <int>
#> 1 c39    2.9   0.822    30
#> 2 c52    2.23  0.828    30
# 复制数据，并移除所有含有 c52 和 d21 的行
c2 <- filter(cabbages, !( Cult == "c52" & Date == "d21" ))
c2a <- c2 %>%
group_by(Cult, Date) %>%
summarise(Weight = mean(HeadWt))
ggplot(c2a, aes(x = Date, fill = Cult, y = Weight)) +
geom_col(position = "dodge")
library(tidyr)
c2b <- c2a %>%
ungroup() %>%
complete(Cult, Date)
ggplot(c2b, aes(x = Date, fill = Cult, y = Weight)) +
geom_col(position = "dodge")
# 复制数据，并移除所有含有 c52 和 d21 的行
c2 <- filter(cabbages, !( Cult == "c52" & Date == "d21" ))
c2a <- c2 %>%
group_by(Cult, Date) %>%
summarise(Weight = mean(HeadWt))
ggplot(c2a, aes(x = Date, fill = Cult, y = Weight)) +
geom_col(position = "dodge")
library(tidyr)
c2b <- c2a %>%
ungroup() %>%
complete(Cult, Date)
ggplot(c2b, aes(x = Date, fill = Cult, y = Weight)) +
geom_col(position = "dodge")
library(MASS) # 加载 MASS 是为了使用 cabbages 数据集
library(dplyr)
ca <- cabbages %>%
group_by(Cult, Date) %>%
summarise(
Weight = mean(HeadWt),
sd = sd(HeadWt),
n = n(),
e = sd / sqrt(n)
)
#> # A tibble: 6 x 6
#> # Groups:    Cult [?]
#>   Cult   Date Weight    sd       n      se
#>   <fct> <fct>  <dbl> <dbl> <int> <dbl>
#> 1 c39     d16   3.18 0.957    10 0.303
#> 2 c39     d20   2.8  0.279    10 0.0882
#> 3 c39     d21   2.74 0.983    10 0.311
#> 4 c52     d16   2.26 0.445    10 0.141
#> 5 c52     d20   3.11 0.791    10 0.250
#> 6 c52     d21   1.47 0.211    10 0.0667
ciMult <- qt(.975, ca$n-1)
ciMult
#> [1] 2.262157 2.262157 2.262157 2.262157 2.262157 2.262157
ca$ci95 <- ca$se * qt(.975, ca$n)
ca$ci <- ca$se * ciMult
ciMult <- qt(.975, ca$n-1)
ciMult
#> [1] 2.262157 2.262157 2.262157 2.262157 2.262157 2.262157
ca$ci <- ca$se * ciMult
library(gcookbook) # 加载 gcookbook 是为了使用 anthoming 数据集
anthoming
#>  angle expt ctrl
#> 1 -20     1    0
#> 2 -10     7    3
#> 3   0     2    3
#> 4  10     0    3
#> 5  20     0    1
# 查看 nhtemp 时间序列对象
nhtemp
#> Time Series:
#> Start = 1912
#> End = 1971
#> ...
#> [43] 52.0 52.0 50.9 52.6 50.2 52.6 51.6 51.9 50.5 50.9 51.7 51.4 51.7 50.8
#> [57] 51.9 51.8 51.9 53.0
# 得到每次观测的时间
as.numeric(time(nhtemp))
#> [1] 1912 1913 1914 1915 1916 1917 1918 1919 1920 1921 1922 1923 1924 1925
#> [15] 1926 1927 1928 1929 1930 1931 1932 1933 1934 1935 1936 1937 1938 1939
#> [29] 1940 1941 1942 1943 1944 1945 1946 1947 1948 1949 1950 1951 1952 1953
#> [43] 1954 1955 1956 1957 1958 1959 1960 1961 1962 1963 1964 1965 1966 1967
#> [57] 1968 1969 1970 1971
# 得到每次观测的值
as.numeric(nhtemp)
#> [1] 49.9 52.3 49.4 51.1 49.4 47.9 49.8 50.9 49.3 51.9 50.8 49.6 49.3 50.6
#> [15] 48.4 50.7 50.9 50.6 51.5 52.8 51.8 51.1 49.8 50.2 50.4 51.6 51.8 50.9
#> [29] 48.8 51.7 51.0 50.6 51.7 51.5 52.1 51.3 51.0 54.0 51.4 52.7 53.1 54.6
#> [43] 52.0 52.0 50.9 52.6 50.2 52.6 51.6 51.9 50.5 50.9 51.7 51.4 51.7 50.8
#> [57] 51.9 51.8 51.9 53.0
# 把它们放进一个数据框中
nht <- data.frame(year=as.numeric(time(nhtemp)), temp=as.numeric(nhtemp))
nht
#>  year temp
#> 1 1912 49.9
#> 2 1913 52.3
#> ...<56 more rows>...
#> 59 1970 51.9
#> 60 1971 53.0
